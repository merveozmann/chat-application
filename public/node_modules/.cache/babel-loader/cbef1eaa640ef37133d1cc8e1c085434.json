{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\merve\\\\Desktop\\\\Chat Application\\\\public\\\\src\\\\pages\\\\login\\\\Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport axios from \"axios\";\nimport { loginRoute } from '../../utils/APIRoutes';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const [values, setValues] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  useEffect(() => {\n    if (localStorage.getItem(\"chat-app-user\")) {\n      navigate('/');\n    }\n  }, []);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (handleValidation()) {\n      console.log(\"gitti\");\n      const {\n        password,\n        username\n      } = values;\n      const {\n        data\n      } = await axios.post(loginRoute, {\n        username,\n        password\n      });\n\n      if (data.status == false) {\n        console.log(data.msg);\n      }\n\n      if (data.status == true) {\n        localStorage.setItem(\"chat-app-user\", JSON.stringify(data.user));\n        console.log(\"başarılı\");\n        navigate(\"/\");\n      }\n    }\n  };\n\n  const handleValidation = () => {\n    const {\n      password,\n      username\n    } = values;\n\n    if (password === \"\") {\n      console.log(\"password and confirm password should be same\");\n      return false;\n    } else if (username.length === \"\") {\n      return false;\n    }\n\n    return true;\n  };\n\n  const handleChange = event => {\n    setValues({ ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: event => handleSubmit(event),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      id: \"\",\n      placeholder: \"username\",\n      onChange: e => handleChange(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"password\",\n      id: \"\",\n      placeholder: \"pass1\",\n      onChange: e => handleChange(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"alreaady login \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 28\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"8ey6uGw7kHebUqDNUIw1UTXT80M=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/merve/Desktop/Chat Application/public/src/pages/login/Login.jsx"],"names":["React","useState","Link","useNavigate","axios","loginRoute","useEffect","Login","navigate","values","setValues","username","password","localStorage","getItem","handleSubmit","event","preventDefault","handleValidation","console","log","data","post","status","msg","setItem","JSON","stringify","user","length","handleChange","target","name","value","e"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport axios from \"axios\";\r\nimport { loginRoute } from '../../utils/APIRoutes';\r\nimport { useEffect } from 'react';\r\n\r\nconst Login = () => {\r\n  const navigate = useNavigate();\r\n  const [values, setValues] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n  })\r\n  useEffect(()=>{\r\n    if(localStorage.getItem(\"chat-app-user\")){\r\n      navigate('/')\r\n    }\r\n\r\n  },[])\r\n  const handleSubmit = async (event) => {\r\n\r\n    event.preventDefault();\r\n    if (handleValidation()) {\r\n      console.log(\"gitti\")\r\n      const { password, username, } = values;\r\n      const { data } = await axios.post(loginRoute, {\r\n        username, password\r\n      })\r\n      if (data.status == false) {\r\n        console.log(data.msg)\r\n      }\r\n      if (data.status == true) {\r\n        localStorage.setItem(\"chat-app-user\", JSON.stringify(data.user));\r\n        console.log(\"başarılı\")\r\n        navigate(\"/\");\r\n      }\r\n\r\n\r\n    }\r\n  }\r\n  const handleValidation = () => {\r\n    const { password, username } = values;\r\n    if (password === \"\") {\r\n      console.log(\"password and confirm password should be same\");\r\n      return false;\r\n    } else if (username.length === \"\") {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  const handleChange = (event) => {\r\n    setValues({ ...values, [event.target.name]: event.target.value })\r\n\r\n  }\r\n  return (\r\n    <form onSubmit={(event) => handleSubmit(event)}>\r\n      <input type=\"text\" name=\"username\" id=\"\" placeholder='username' onChange={(e) => handleChange(e)} />\r\n\r\n      <input type=\"text\" name=\"password\" id=\"\" placeholder='pass1' onChange={(e) => handleChange(e)} />\r\n\r\n      <button type='submit'>Login</button>\r\n      <span>alreaady login <Link to=\"/register\"></Link> </span>\r\n\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Login"]},"metadata":{},"sourceType":"module"}