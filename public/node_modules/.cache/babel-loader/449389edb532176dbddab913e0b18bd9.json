{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\merve\\\\Desktop\\\\Chat Application\\\\public\\\\src\\\\components\\\\chatContainer\\\\ChatContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport \"./chatContainer.css\";\nimport Logo from \"../../assets/img/logo-small.png\";\nimport Logout from '../logout/Logout';\nimport ChatInput from '../chatInput/ChatInput';\nimport Message from \"../message/Message\";\nimport axios from \"axios\";\nimport { sendMessageRoute, getAllMessagesRoute } from '../../utils/APIRoutes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatContainer = _ref => {\n  _s();\n\n  let {\n    currentChat,\n    currentUser,\n    socket\n  } = _ref;\n  const [messages, setMessages] = useState([]);\n  const [arrivalMessage, setArrivalMessage] = useState(null);\n  const scrollRef = useRef();\n  useEffect(async () => {\n    const response = await axios.post(getAllMessagesRoute, {\n      from: currentUser._id,\n      to: currentChat._id\n    });\n    console.log(response.data.projectedMessages);\n    setMessages(response.data.projectedMessages);\n  }, [currentChat]);\n\n  const handleSendMsg = async msg => {\n    await axios.post(sendMessageRoute, {\n      from: currentUser._id,\n      to: currentChat._id,\n      message: msg\n    });\n    socket.current.emit(\"send-msg\", {\n      from: currentUser._id,\n      to: currentChat._id,\n      message: msg\n    });\n    const msgs = [...messages];\n    msg.push({\n      fromSelf: true,\n      message: msg\n    });\n    setMessages(msgs);\n  };\n\n  useEffect(() => {\n    if (socket.current) {\n      socket.current.on(\"msg-recieve\", msg => {\n        setArrivalMessage({\n          fromSelf: false,\n          message: msg\n        });\n      });\n    }\n  }, []);\n  useEffect(() => {\n    arrivalMessage && setMessages(prev => [...prev, arrivalMessage]);\n  }, [arrivalMessage]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: currentChat && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatContainer__content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat__header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user__details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"avatar\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: Logo,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"username\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: currentChat.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Logout, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat__messages\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n        handleSendMsg: handleSendMsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ChatContainer, \"w2KhUqFs0jOVYMFLXwpRd6AbKA0=\");\n\n_c = ChatContainer;\nexport default ChatContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatContainer\");","map":{"version":3,"sources":["C:/Users/merve/Desktop/Chat Application/public/src/components/chatContainer/ChatContainer.jsx"],"names":["React","useState","useEffect","Logo","Logout","ChatInput","Message","axios","sendMessageRoute","getAllMessagesRoute","ChatContainer","currentChat","currentUser","socket","messages","setMessages","arrivalMessage","setArrivalMessage","scrollRef","useRef","response","post","from","_id","to","console","log","data","projectedMessages","handleSendMsg","msg","message","current","emit","msgs","push","fromSelf","on","prev","username"],"mappings":"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","sourcesContent":["import React ,{useState,useEffect} from 'react'\r\nimport \"./chatContainer.css\"\r\nimport Logo from \"../../assets/img/logo-small.png\";\r\nimport Logout from '../logout/Logout';\r\nimport ChatInput from '../chatInput/ChatInput';\r\nimport Message from \"../message/Message\";\r\nimport axios from \"axios\"\r\nimport { sendMessageRoute,getAllMessagesRoute } from '../../utils/APIRoutes';\r\n\r\n\r\nconst ChatContainer = ({ currentChat,currentUser,socket }) => {\r\n    const [ messages , setMessages ]= useState([]);\r\n    const [arrivalMessage,setArrivalMessage]=useState(null);\r\n    const scrollRef = useRef();\r\n    useEffect(async()=>{\r\n        \r\n        const response = await axios.post(getAllMessagesRoute,{\r\n            from:currentUser._id,\r\n            to:currentChat._id\r\n        })\r\n        console.log(response.data.projectedMessages)\r\n        setMessages(response.data.projectedMessages);\r\n       \r\n    },[currentChat])\r\n    const handleSendMsg =async (msg)=>{\r\n        await axios.post(sendMessageRoute,{\r\n            from:currentUser._id,\r\n            to:currentChat._id,\r\n            message:msg\r\n        })\r\n        socket.current.emit(\"send-msg\",{\r\n            from:currentUser._id,\r\n            to:currentChat._id,\r\n            message:msg\r\n        })\r\n\r\n        const msgs = [...messages];\r\n        msg.push({fromSelf:true,message:msg});\r\n        setMessages(msgs)\r\n    }\r\n    useEffect(()=>{\r\n        if(socket.current){\r\n            socket.current.on(\"msg-recieve\",(msg)=>{\r\n                setArrivalMessage({fromSelf:false,message:msg})\r\n            })\r\n        }\r\n    \r\n    },[])\r\n    useEffect(()=>{\r\n        arrivalMessage && setMessages((prev)=>[...prev,arrivalMessage])\r\n    },[arrivalMessage])\r\n    return (\r\n        <div>\r\n            {currentChat &&\r\n                <div className='chatContainer__content'>\r\n                    <div className=\"chat__header\">\r\n                        <div className=\"user__details\">\r\n                            <div className=\"avatar\">\r\n                                <img src={Logo} alt=\"\" />\r\n                            </div>\r\n                            <div className=\"username\">\r\n                                <h3>{currentChat.username}</h3>\r\n                            </div>\r\n                        </div>\r\n                        <Logout/>\r\n                    </div>\r\n                    <div className=\"chat__messages\">\r\n                        {/* {\r\n                            messages.map((message)=>{\r\n                                return(\r\n                                    <div>\r\n                                        <div className={`message ${message.fromSelf ? \"sended\":\"recieved\"}`}>\r\n                                            <div className=\"message__content\">\r\n                                                <p>\r\n                                                    {message.message}\r\n                                                </p>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                )\r\n                            }\r\n                            )} */}\r\n\r\n                    </div>\r\n                    <ChatInput handleSendMsg={handleSendMsg}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatContainer"]},"metadata":{},"sourceType":"module"}