{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\argerf-merve\\\\Desktop\\\\Chat Application\\\\public\\\\src\\\\components\\\\chatContainer\\\\ChatContainer.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport \"./chatContainer.css\";\nimport Logo from \"../../assets/img/logo-small.png\";\nimport Logout from '../logout/Logout';\nimport ChatInput from '../chatInput/ChatInput';\nimport axios from \"axios\";\nimport { sendMessageRoute, getAllMessagesRoute } from '../../utils/APIRoutes';\nimport { v4 as uuidv4 } from \"uuid\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ChatContainer = _ref => {\n  _s();\n\n  let {\n    currentChat,\n    currentUser,\n    socket\n  } = _ref;\n  const [messages, setMessages] = useState([]);\n  const [arrivalMessage, setArrivalMessage] = useState(null);\n  const [writting, setWritting] = useState(\"\");\n  const scrollRef = useRef();\n  useEffect(async () => {\n    if (currentUser) {\n      const response = await axios.post(getAllMessagesRoute, {\n        from: currentUser._id,\n        to: currentChat._id\n      });\n      setMessages(response.data.projectedMessages);\n    }\n  }, [currentChat]);\n  useEffect(() => {\n    if (socket.current) {\n      socket.current.on(\"msg-recieve\", msg => {\n        setArrivalMessage({\n          fromSelf: false,\n          message: msg,\n          createdAt: Date.now()\n        });\n      });\n      socket.current.on(\"get-writing\", msg => {\n        setWritting(msg);\n        console.log(msg);\n      });\n    }\n  }, []);\n  useEffect(() => {\n    arrivalMessage && setMessages(prev => [...prev, arrivalMessage]);\n  }, [arrivalMessage]);\n  useEffect(() => {\n    var _scrollRef$current;\n\n    (_scrollRef$current = scrollRef.current) === null || _scrollRef$current === void 0 ? void 0 : _scrollRef$current.scrollIntoView({\n      behaviour: \"smooth\"\n    });\n  }, [messages]);\n\n  const handleSendMsg = async msg => {\n    await axios.post(sendMessageRoute, {\n      from: currentUser._id,\n      to: currentChat._id,\n      message: msg\n    });\n    socket.current.emit(\"send-msg\", {\n      from: currentUser._id,\n      to: currentChat._id,\n      message: msg\n    });\n    const msgs = [...messages];\n    msgs.push({\n      fromSelf: true,\n      message: msg\n    });\n    setMessages(msgs);\n  };\n\n  const handleKeyPress = async () => {\n    socket.current.emit(\"send-writing\", {\n      from: currentUser._id,\n      to: currentChat._id\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: currentChat && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatContainer__content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat__header\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"user__details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"avatar\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: Logo,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"username\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: currentChat.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Logout, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"chat__messages\",\n        children: messages.map(message => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: scrollRef,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `message ${message.fromSelf ? \"sended\" : \"recieved\"}`,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"message__content\",\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: message.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 41\n            }, this)\n          }, uuidv4(), false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 37\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ChatInput, {\n        handleSendMsg: handleSendMsg,\n        handleKeyPress: handleKeyPress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ChatContainer, \"NZBBOX/BZd7QBH8dyJtsjTD2Whw=\");\n\n_c = ChatContainer;\nexport default ChatContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatContainer\");","map":{"version":3,"sources":["C:/Users/argerf-merve/Desktop/Chat Application/public/src/components/chatContainer/ChatContainer.jsx"],"names":["React","useState","useEffect","useRef","Logo","Logout","ChatInput","axios","sendMessageRoute","getAllMessagesRoute","v4","uuidv4","ChatContainer","currentChat","currentUser","socket","messages","setMessages","arrivalMessage","setArrivalMessage","writting","setWritting","scrollRef","response","post","from","_id","to","data","projectedMessages","current","on","msg","fromSelf","message","createdAt","Date","now","console","log","prev","scrollIntoView","behaviour","handleSendMsg","emit","msgs","push","handleKeyPress","username","map"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\nimport \"./chatContainer.css\"\r\nimport Logo from \"../../assets/img/logo-small.png\";\r\nimport Logout from '../logout/Logout';\r\nimport ChatInput from '../chatInput/ChatInput';\r\nimport axios from \"axios\"\r\nimport { sendMessageRoute, getAllMessagesRoute } from '../../utils/APIRoutes';\r\nimport { v4 as uuidv4 } from \"uuid\"\r\n\r\nconst ChatContainer = ({ currentChat, currentUser, socket }) => {\r\n    const [messages, setMessages] = useState([]);\r\n    const [arrivalMessage, setArrivalMessage] = useState(null);\r\n    const [writting,setWritting]=useState(\"\");\r\n    const scrollRef = useRef();\r\n    useEffect(async () => {\r\n        if (currentUser) {\r\n            const response = await axios.post(getAllMessagesRoute, {\r\n                from: currentUser._id,\r\n                to: currentChat._id\r\n            })\r\n            setMessages(response.data.projectedMessages);\r\n        }\r\n    }, [currentChat])\r\n    useEffect(() => {\r\n        if (socket.current) {\r\n            socket.current.on(\"msg-recieve\", (msg) => {\r\n                setArrivalMessage({ fromSelf: false, message: msg, createdAt: Date.now() })\r\n            })\r\n            socket.current.on(\"get-writing\", (msg) => {\r\n                setWritting(msg)\r\n                console.log(msg)\r\n            })\r\n        }\r\n    }, [])\r\n    useEffect(() => {\r\n        arrivalMessage && setMessages((prev) => [...prev, arrivalMessage])\r\n    }, [arrivalMessage])\r\n    useEffect(() => {\r\n        scrollRef.current?.scrollIntoView({ behaviour: \"smooth\" })\r\n    }, [messages])\r\n    const handleSendMsg = async (msg) => {\r\n        await axios.post(sendMessageRoute, {\r\n            from: currentUser._id,\r\n            to: currentChat._id,\r\n            message: msg\r\n        })\r\n        socket.current.emit(\"send-msg\", {\r\n            from: currentUser._id,\r\n            to: currentChat._id,\r\n            message: msg\r\n        })\r\n        const msgs = [...messages];\r\n        msgs.push({ fromSelf: true, message: msg });\r\n        setMessages(msgs)\r\n    }\r\n    const handleKeyPress = async()=>{\r\n        socket.current.emit(\"send-writing\", {\r\n            from: currentUser._id,\r\n            to: currentChat._id\r\n        })\r\n    }\r\n    return (\r\n        <div>\r\n            {currentChat &&\r\n                <div className='chatContainer__content'>\r\n                    <div className=\"chat__header\">\r\n                        <div className=\"user__details\">\r\n                            <div className=\"avatar\">\r\n                                <img src={Logo} alt=\"\" />\r\n                            </div>\r\n                            <div className=\"username\">\r\n                                <h3>{currentChat.username}</h3>\r\n                            </div>\r\n                            <div>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <Logout />\r\n                    </div>\r\n                    <div className=\"chat__messages\">\r\n                        {\r\n                            messages.map((message) => {\r\n                                return (\r\n                                    <div ref={scrollRef} key={uuidv4()}>\r\n                                        <div className={`message ${message.fromSelf ? \"sended\" : \"recieved\"}`}>\r\n                                            <div className=\"message__content\">\r\n                                                <p>\r\n                                                    {message.message}\r\n                                                </p>\r\n                                            </div>\r\n                                        </div>\r\n\r\n                                    </div>\r\n                                )\r\n                            })}\r\n                    </div>\r\n                    <ChatInput handleSendMsg={handleSendMsg} handleKeyPress={handleKeyPress}/>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatContainer"]},"metadata":{},"sourceType":"module"}