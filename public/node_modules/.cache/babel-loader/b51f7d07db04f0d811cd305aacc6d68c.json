{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\argerf-merve\\\\Desktop\\\\Chat Application\\\\public\\\\src\\\\pages\\\\chat\\\\Chat.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport axios from 'axios';\nimport \"./chat.css\";\nimport { useNavigate } from 'react-router-dom';\nimport { allUsersRoute, host, getChatRoom } from '../../utils/APIRoutes';\nimport Contact from '../../components/contact/Contact';\nimport Welcome from '../../components/welcome/Welcome';\nimport ChatContainer from '../../components/chatContainer/ChatContainer';\nimport ChatRoomContainer from \"../../components/chatRoomContainer/ChatRoomContainer\";\nimport { io } from \"socket.io-client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chat = () => {\n  _s();\n\n  const socket = useRef();\n  const navigate = useNavigate();\n  const [contacts, setContacts] = useState([]);\n  const [roomList, setRoomList] = useState([]);\n  const [currentUser, setCurrentUser] = useState(undefined);\n  const [currentChat, setCurrentChat] = useState(undefined);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [onlineUser, setOnline] = useState([]);\n  const [roomControl, setRoomControl] = useState(false);\n  useEffect(async () => {\n    if (!localStorage.getItem(\"chat-app-user\")) {\n      navigate(\"/login\");\n    } else {\n      setCurrentUser(await JSON.parse(localStorage.getItem(\"chat-app-user\")));\n      setIsLoaded(true);\n    }\n  }, []);\n  useEffect(() => {\n    if (currentUser) {\n      socket.current = io(host);\n      socket.current.emit(\"add-user\", currentUser._id);\n      socket.current.on(\"get-users\", users => {\n        setOnline(users);\n      });\n    }\n  }, [currentUser]);\n  useEffect(async () => {\n    if (currentUser) {\n      const data = await axios.get(`${allUsersRoute}/${currentUser._id}`);\n      setContacts(data.data);\n      const data1 = await axios.get(`${getChatRoom}`);\n      setRoomList(data1.data.rooms);\n    }\n  }, [currentUser]);\n\n  const handleChatChange = chat => {\n    setCurrentChat(chat);\n    console.log(currentChat);\n    setRoomControl(true);\n  };\n\n  const handleRoomChange = room => {\n    console.log(room);\n    setRoomControl(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Contact, {\n        contacts: contacts,\n        currentUser: currentUser,\n        onlineUser: onlineUser,\n        changeChat: handleChatChange,\n        roomList: roomList,\n        rommChange: handleRoomChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), isLoaded && currentChat === undefined ? /*#__PURE__*/_jsxDEV(Welcome, {\n        currentUser: currentUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 14\n      }, this) : roomControl == true ? /*#__PURE__*/_jsxDEV(ChatContainer, {\n        currentChat: currentChat,\n        currentUser: currentUser,\n        socket: socket\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 35\n      }, this) : /*#__PURE__*/_jsxDEV(ChatRoomContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 122\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chat, \"eDZE59FxgZXZ6S8jNabJkokAe0k=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["C:/Users/argerf-merve/Desktop/Chat Application/public/src/pages/chat/Chat.jsx"],"names":["React","useState","useEffect","useRef","axios","useNavigate","allUsersRoute","host","getChatRoom","Contact","Welcome","ChatContainer","ChatRoomContainer","io","Chat","socket","navigate","contacts","setContacts","roomList","setRoomList","currentUser","setCurrentUser","undefined","currentChat","setCurrentChat","isLoaded","setIsLoaded","onlineUser","setOnline","roomControl","setRoomControl","localStorage","getItem","JSON","parse","current","emit","_id","on","users","data","get","data1","rooms","handleChatChange","chat","console","log","handleRoomChange","room"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\nimport axios from 'axios';\r\nimport \"./chat.css\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { allUsersRoute, host, getChatRoom } from '../../utils/APIRoutes';\r\nimport Contact from '../../components/contact/Contact';\r\nimport Welcome from '../../components/welcome/Welcome';\r\nimport ChatContainer from '../../components/chatContainer/ChatContainer';\r\nimport ChatRoomContainer from \"../../components/chatRoomContainer/ChatRoomContainer\"\r\nimport { io } from \"socket.io-client\"\r\n\r\nconst Chat = () => {\r\n  const socket = useRef();\r\n  const navigate = useNavigate();\r\n  const [contacts, setContacts] = useState([]);\r\n  const [roomList, setRoomList] = useState([]);\r\n  const [currentUser, setCurrentUser] = useState(undefined);\r\n  const [currentChat, setCurrentChat] = useState(undefined);\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [onlineUser, setOnline] = useState([]);\r\n  const [roomControl , setRoomControl]=useState(false);\r\n\r\n  useEffect(async () => {\r\n    if (!localStorage.getItem(\"chat-app-user\")) {\r\n      navigate(\"/login\")\r\n    } else {\r\n      setCurrentUser(await JSON.parse(localStorage.getItem(\"chat-app-user\")))\r\n      setIsLoaded(true)\r\n    }\r\n  }, [])\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      socket.current = io(host);\r\n      socket.current.emit(\"add-user\", currentUser._id);\r\n      socket.current.on(\"get-users\", (users) => {\r\n        setOnline(users)\r\n      })\r\n    }\r\n    \r\n  }, [currentUser])\r\n\r\n  useEffect(async () => {\r\n    if (currentUser) {\r\n      const data = await axios.get(`${allUsersRoute}/${currentUser._id}`);\r\n      setContacts(data.data)\r\n      const data1 = await axios.get(`${getChatRoom}`);\r\n      setRoomList(data1.data.rooms)\r\n    }\r\n   \r\n  }, [currentUser])\r\n\r\n  const handleChatChange = (chat) => {\r\n    setCurrentChat(chat);\r\n    console.log(currentChat)\r\n    setRoomControl(true)\r\n  }\r\n  const handleRoomChange= (room)=>{\r\n    console.log(room)\r\n    setRoomControl(false)\r\n\r\n  }\r\n  return (\r\n    <div className='chat'>\r\n      <div className=\"container\">\r\n        <Contact contacts={contacts} currentUser={currentUser} onlineUser={onlineUser} changeChat={handleChatChange} roomList={roomList} rommChange={handleRoomChange} />\r\n        {\r\n          isLoaded && currentChat === undefined ?\r\n            (<Welcome currentUser={currentUser} />) :\r\n            ( roomControl==true ? <ChatContainer currentChat={currentChat} currentUser={currentUser} socket={socket} /> :<ChatRoomContainer/>)\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default Chat"]},"metadata":{},"sourceType":"module"}