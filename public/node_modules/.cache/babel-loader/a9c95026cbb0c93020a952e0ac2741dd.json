{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\merve\\\\Desktop\\\\Chat Application\\\\public\\\\src\\\\pages\\\\login\\\\Login.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport axios from \"axios\";\nimport { loginRoute } from '../../utils/APIRoutes';\nimport \"./login.css\";\nimport { toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\ntoast.configure();\n\nconst notify = message => {\n  toast(message);\n};\n\nconst Login = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const [values, setValues] = useState({\n    username: \"\",\n    password: \"\"\n  });\n  useEffect(() => {\n    if (localStorage.getItem(\"chat-app-user\")) {\n      navigate('/');\n    }\n  }, []);\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (handleValidation()) {\n      const {\n        password,\n        username\n      } = values;\n      const {\n        data\n      } = await axios.post(loginRoute, {\n        username,\n        password\n      });\n\n      if (data.status == false) {\n        notify(data.msg);\n      }\n\n      if (data.status == true) {\n        localStorage.setItem(\"chat-app-user\", JSON.stringify(data.user));\n        navigate(\"/\");\n      }\n    }\n  };\n\n  const handleValidation = () => {\n    const {\n      password,\n      username\n    } = values;\n\n    if (password === \"\") {\n      notify(\"Password is not null\");\n      return false;\n    } else if (username === \"\") {\n      notify(\"Username is not null\");\n      return false;\n    }\n\n    return true;\n  };\n\n  const handleChange = event => {\n    setValues({ ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login__container\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: event => handleSubmit(event),\n      className: \"login__form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Chatt App\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        id: \"\",\n        placeholder: \"username\",\n        onChange: e => handleChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"password\",\n        id: \"\",\n        placeholder: \"password\",\n        onChange: e => handleChange(e)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Log In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Don't have an account ? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/register\",\n          children: \"Create One.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 35\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"8ey6uGw7kHebUqDNUIw1UTXT80M=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/merve/Desktop/Chat Application/public/src/pages/login/Login.jsx"],"names":["React","useEffect","useState","Link","useNavigate","axios","loginRoute","toast","configure","notify","message","Login","navigate","values","setValues","username","password","localStorage","getItem","handleSubmit","event","preventDefault","handleValidation","data","post","status","msg","setItem","JSON","stringify","user","handleChange","target","name","value","e"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\r\nimport { useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport axios from \"axios\";\r\nimport { loginRoute } from '../../utils/APIRoutes';\r\nimport \"./login.css\";\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\ntoast.configure()\r\n\r\nconst notify = (message) => {\r\n  toast(message)\r\n}\r\nconst Login = () => {\r\n  const navigate = useNavigate();\r\n  const [values, setValues] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n  })\r\n  useEffect(() => {\r\n    if (localStorage.getItem(\"chat-app-user\")) {\r\n      navigate('/')\r\n    }\r\n  }, [])\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (handleValidation()) {\r\n      const { password, username, } = values;\r\n      const { data } = await axios.post(loginRoute, {\r\n        username, password\r\n      })\r\n      if (data.status == false) {\r\n        notify(data.msg)\r\n      }\r\n      if (data.status == true) {\r\n        localStorage.setItem(\"chat-app-user\", JSON.stringify(data.user));\r\n        navigate(\"/\");\r\n      }\r\n    }\r\n  }\r\n  const handleValidation = () => {\r\n    const { password, username } = values;\r\n    if (password === \"\") {\r\n      notify(\"Password is not null\")\r\n      return false;\r\n    } else if (username === \"\") {\r\n      notify(\"Username is not null\")\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n  const handleChange = (event) => {\r\n    setValues({ ...values, [event.target.name]: event.target.value })\r\n\r\n  }\r\n  return (\r\n    <div className='login__container'>\r\n\r\n      <form onSubmit={(event) => handleSubmit(event)} className=\"login__form\">\r\n        <div className=\"title\">\r\n          <h3>Chatt App</h3>\r\n        </div>\r\n        <input type=\"text\" name=\"username\" id=\"\" placeholder='username' onChange={(e) => handleChange(e)} />\r\n\r\n        <input type=\"text\" name=\"password\" id=\"\" placeholder='password' onChange={(e) => handleChange(e)} />\r\n\r\n        <button type='submit'>Log In</button>\r\n        <span>\r\n          Don't have an account ? <Link to=\"/register\">Create One.</Link>\r\n        </span>\r\n\r\n      </form>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login"]},"metadata":{},"sourceType":"module"}