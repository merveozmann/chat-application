{"ast":null,"code":"var _jsxFileName = \"F:\\\\Chat Application\\\\public\\\\src\\\\pages\\\\chat\\\\Chat.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport \"./chat.css\";\nimport { useNavigate } from 'react-router-dom';\nimport { allUsersRoute } from '../../utils/APIRoutes';\nimport Contact from '../../components/contact/Contact';\nimport Welcome from '../../components/welcome/Welcome';\nimport ChatContainer from '../../components/chatContainer/ChatContainer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Chat = () => {\n  _s();\n\n  const navigate = useNavigate();\n  const [contacts, setContacts] = useState([]);\n  const [currentUser, setCurrentUser] = useState(undefined);\n  const [currentChat, setCurrentChat] = useState(undefined);\n  const [isLoaded, setIsLoaded] = useState(false);\n  useEffect(async () => {\n    if (!localStorage.getItem(\"chat-app-user\")) {\n      navigate(\"/login\");\n    } else {\n      setCurrentUser(await JSON.parse(localStorage.getItem(\"chat-app-user\")));\n      setIsLoaded(true);\n    }\n  }, []);\n  useEffect(async () => {\n    if (currentUser) {\n      const data = await axios.get(`${allUsersRoute}/${currentUser._id}`);\n      setContacts(data.data);\n    }\n  }, [currentUser]);\n\n  const handleChatChange = chat => {\n    setCurrentChat(chat);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(Contact, {\n        contacts: contacts,\n        currentUser: currentUser,\n        changeChat: handleChatChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), isLoaded && currentChat === undefined ? /*#__PURE__*/_jsxDEV(Welcome, {\n        currentUser: currentUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 12\n      }, this) : /*#__PURE__*/_jsxDEV(ChatContainer, {\n        currentChat: currentChat,\n        currentUser: currentUser\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 12\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Chat, \"I23xYds1APDwcaMZeGbjz4aZi1w=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Chat;\nexport default Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"sources":["F:/Chat Application/public/src/pages/chat/Chat.jsx"],"names":["React","useState","useEffect","axios","useNavigate","allUsersRoute","Contact","Welcome","ChatContainer","Chat","navigate","contacts","setContacts","currentUser","setCurrentUser","undefined","currentChat","setCurrentChat","isLoaded","setIsLoaded","localStorage","getItem","JSON","parse","data","get","_id","handleChatChange","chat"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAwBC,SAAxB,QAAwC,OAAxC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,OAAOC,OAAP,MAAoB,kCAApB;AACA,OAAOC,aAAP,MAA0B,8CAA1B;;;AACA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAM,CAACO,QAAD,EAAUC,WAAV,IAAuBX,QAAQ,CAAC,EAAD,CAArC;AACA,QAAM,CAACY,WAAD,EAAaC,cAAb,IAA6Bb,QAAQ,CAACc,SAAD,CAA3C;AACA,QAAM,CAACC,WAAD,EAAaC,cAAb,IAA6BhB,QAAQ,CAACc,SAAD,CAA3C;AACA,QAAM,CAACG,QAAD,EAAUC,WAAV,IAAuBlB,QAAQ,CAAC,KAAD,CAArC;AAEAC,EAAAA,SAAS,CAAC,YAAS;AACjB,QAAG,CAACkB,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAJ,EAA0C;AACxCX,MAAAA,QAAQ,CAAC,QAAD,CAAR;AACD,KAFD,MAEK;AACHI,MAAAA,cAAc,CAAE,MAAMQ,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAX,CAAR,CAAd;AACAF,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD;AACF,GAPQ,EAOP,EAPO,CAAT;AAQAjB,EAAAA,SAAS,CAAC,YAAS;AACjB,QAAGW,WAAH,EAAe;AACb,YAAMW,IAAI,GAAG,MAAMrB,KAAK,CAACsB,GAAN,CAAW,GAAEpB,aAAc,IAAGQ,WAAW,CAACa,GAAI,EAA9C,CAAnB;AACAd,MAAAA,WAAW,CAACY,IAAI,CAACA,IAAN,CAAX;AACD;AACF,GALQ,EAKP,CAACX,WAAD,CALO,CAAT;;AAMA,QAAMc,gBAAgB,GAAIC,IAAD,IAAQ;AAC/BX,IAAAA,cAAc,CAACW,IAAD,CAAd;AACD,GAFD;;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE,QAAC,OAAD;AAAS,QAAA,QAAQ,EAAEjB,QAAnB;AAA6B,QAAA,WAAW,EAAEE,WAA1C;AAAuD,QAAA,UAAU,EAAEc;AAAnE;AAAA;AAAA;AAAA;AAAA,cADF,EAGIT,QAAQ,IAAIF,WAAW,KAAGD,SAA1B,gBACC,QAAC,OAAD;AAAS,QAAA,WAAW,EAAEF;AAAtB;AAAA;AAAA;AAAA;AAAA,cADD,gBAEC,QAAC,aAAD;AAAe,QAAA,WAAW,EAAEG,WAA5B;AAAyC,QAAA,WAAW,EAAEH;AAAtD;AAAA;AAAA;AAAA;AAAA,cALL;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CAvCD;;GAAMJ,I;UACaL,W;;;KADbK,I;AAyCN,eAAeA,IAAf","sourcesContent":["import React ,{useState,useEffect} from 'react'\r\nimport axios from 'axios';\r\nimport \"./chat.css\";\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { allUsersRoute } from '../../utils/APIRoutes';\r\nimport Contact from '../../components/contact/Contact';\r\nimport Welcome from '../../components/welcome/Welcome';\r\nimport ChatContainer from '../../components/chatContainer/ChatContainer';\r\nconst Chat = () => {\r\n  const navigate = useNavigate();\r\n  const [contacts,setContacts]=useState([]);\r\n  const [currentUser,setCurrentUser]=useState(undefined);\r\n  const [currentChat,setCurrentChat]=useState(undefined);\r\n  const [isLoaded,setIsLoaded]=useState(false);\r\n \r\n  useEffect(async()=>{\r\n    if(!localStorage.getItem(\"chat-app-user\")){\r\n      navigate(\"/login\")\r\n    }else{\r\n      setCurrentUser( await JSON.parse(localStorage.getItem(\"chat-app-user\")))\r\n      setIsLoaded(true)\r\n    }\r\n  },[])\r\n  useEffect(async()=>{\r\n    if(currentUser){\r\n      const data = await axios.get(`${allUsersRoute}/${currentUser._id}`);\r\n      setContacts(data.data)\r\n    }\r\n  },[currentUser])\r\n  const handleChatChange = (chat)=>{\r\n    setCurrentChat(chat);\r\n  }\r\n  return (\r\n    <div className='chat'>\r\n      <div className=\"container\">\r\n        <Contact contacts={contacts} currentUser={currentUser} changeChat={handleChatChange}/>\r\n        {\r\n          isLoaded && currentChat===undefined ? \r\n          (<Welcome currentUser={currentUser}/>):\r\n          (<ChatContainer currentChat={currentChat} currentUser={currentUser}/>)\r\n        }\r\n      </div>\r\n\r\n\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Chat"]},"metadata":{},"sourceType":"module"}