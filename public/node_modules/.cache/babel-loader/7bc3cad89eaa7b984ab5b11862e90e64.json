{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\merve\\\\Desktop\\\\Chat Application\\\\public\\\\src\\\\components\\\\contact\\\\Contact.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { format } from \"timeago.js\";\nimport \"./contact.css\";\nimport Logo from \"../../assets/img/logo-small.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Contact = _ref => {\n  _s();\n\n  let {\n    contacts,\n    currentUser,\n    onlineUser,\n    changeChat,\n    roomList,\n    rommChange\n  } = _ref;\n  const [currentUserName, setCurrentUserName] = useState(undefined);\n  const [currentSelected, setCurrentSelected] = useState(undefined);\n  const [roomChatSelected, setroomChatSelected] = useState(undefined);\n  const [userList, setUserList] = useState({});\n  useEffect(() => {\n    var obj = {};\n\n    for (var i = 0; i < contacts.length; i++) {\n      var id = contacts[i]._id;\n\n      if (!obj[id]) {\n        obj[id] = {\n          username: contacts[i].username,\n          connect: false,\n          lastseen: contacts[i].lastseen,\n          email: contacts[i].email,\n          _id: contacts[i]._id\n        };\n      }\n\n      if (onlineUser.length > 0) {\n        for (var j = 0; j < onlineUser.length; j++) {\n          if (contacts[i]._id == onlineUser[j].userId) {\n            obj[id].connect = true;\n          }\n        }\n      }\n    }\n\n    setUserList(obj);\n  }, [onlineUser]);\n  useEffect(() => {\n    if (currentUser) {\n      setCurrentUserName(currentUser.username);\n    }\n  }, [currentUser]);\n\n  const changeCurrentChat = (index, contact) => {\n    setCurrentSelected(index);\n    changeChat(contact);\n  };\n\n  const changeRoomChat = (index, room) => {\n    setroomChatSelected(room);\n    rommChange(room);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contact__container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"brand\",\n      children: /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Chat Room\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contacts\",\n      children: roomList.map((room, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `contact__chatroom contact__room ${room === roomChatSelected ? \"selected__room\" : \"\"}`,\n          onClick: () => changeRoomChat(room, room),\n          children: room\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"brand\",\n      children: /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: \"Users List\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contacts\",\n      children: Object.keys(userList).map((key, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: ` contact ${index === currentSelected ? \"selected\" : \"\"}`,\n          onClick: () => changeCurrentChat(index, userList[key]),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"avatar\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: Logo,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"username\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: userList[key].username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"username\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: userList[key].connect == true ? \"Online\" : format(userList[key].lastseen)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"current__user\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"avatar\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: Logo,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"username\",\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: currentUserName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Contact, \"Km9fUbebXm/dgGpcQUqF8rC6Ffk=\");\n\n_c = Contact;\nexport default Contact;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contact\");","map":{"version":3,"sources":["C:/Users/merve/Desktop/Chat Application/public/src/components/contact/Contact.jsx"],"names":["React","useState","useEffect","format","Logo","Contact","contacts","currentUser","onlineUser","changeChat","roomList","rommChange","currentUserName","setCurrentUserName","undefined","currentSelected","setCurrentSelected","roomChatSelected","setroomChatSelected","userList","setUserList","obj","i","length","id","_id","username","connect","lastseen","email","j","userId","changeCurrentChat","index","contact","changeRoomChat","room","map","Object","keys","key"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\r\nimport {format} from \"timeago.js\"\r\nimport \"./contact.css\";\r\nimport Logo from \"../../assets/img/logo-small.png\";\r\n\r\nconst Contact = ({ contacts, currentUser, onlineUser, changeChat, roomList, rommChange }) => {\r\n  const [currentUserName, setCurrentUserName] = useState(undefined);\r\n  const [currentSelected, setCurrentSelected] = useState(undefined);\r\n  const [roomChatSelected, setroomChatSelected] = useState(undefined);\r\n  const [userList, setUserList] = useState({});\r\n  useEffect(() => {\r\n    var obj = {}\r\n    for (var i = 0; i < contacts.length; i++) {\r\n      var id = contacts[i]._id\r\n      if (!obj[id]) {\r\n        obj[id] = { username: contacts[i].username, connect: false,lastseen:contacts[i].lastseen ,email:contacts[i].email ,_id:contacts[i]._id }\r\n      }\r\n      if (onlineUser.length > 0) {\r\n        for (var j = 0; j < onlineUser.length; j++) {\r\n          if (contacts[i]._id == onlineUser[j].userId) {\r\n            obj[id].connect = true\r\n          }\r\n        }\r\n      }\r\n    }\r\n    setUserList(obj)\r\n  }, [onlineUser])\r\n  useEffect(() => {\r\n    if (currentUser) {\r\n      setCurrentUserName(currentUser.username);\r\n    }\r\n  }, [currentUser])\r\n  const changeCurrentChat = (index, contact) => {\r\n    setCurrentSelected(index)\r\n    changeChat(contact)\r\n  }\r\n  const changeRoomChat = (index, room) => {\r\n    setroomChatSelected(room)\r\n    rommChange(room)\r\n  }\r\n  return (\r\n    <div className='contact__container'>\r\n      <div className=\"brand\">\r\n        <h5>Chat Room</h5>\r\n      </div>\r\n      <div className=\"contacts\">\r\n        {\r\n          roomList.map((room, index) => {\r\n            return (\r\n              <div className={`contact__chatroom contact__room ${room === roomChatSelected ? \"selected__room\" : \"\"}`} onClick={() => changeRoomChat(room, room)} key={index}>\r\n                {room}\r\n              </div>\r\n            )\r\n          })\r\n        }\r\n      </div>\r\n\r\n      <div className=\"brand\">\r\n        <h5>Users List</h5>\r\n      </div>\r\n      <div className=\"contacts\">\r\n        {\r\n         Object.keys(userList).map((key, index) => {\r\n            return (\r\n              <div className={` contact ${index === currentSelected ? \"selected\" : \"\"}`} onClick={() => changeCurrentChat(index, userList[key])} key={index}>\r\n                <div className=\"avatar\">\r\n                  <img src={Logo} alt=\"\" />\r\n                </div>\r\n                <div className=\"username\">\r\n                  <h3>{userList[key].username}</h3>\r\n                </div>\r\n                <div className=\"username\">\r\n                  <h3>{userList[key].connect == true? \"Online\" : format(userList[key].lastseen)}</h3>\r\n                </div>\r\n\r\n              </div>\r\n            )\r\n          })\r\n        }\r\n      </div>\r\n      <div className=\"current__user\">\r\n        <div className=\"avatar\">\r\n          <img src={Logo} alt=\"\" />\r\n        </div>\r\n        <div className=\"username\">\r\n          <h3>{currentUserName}</h3>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Contact"]},"metadata":{},"sourceType":"module"}