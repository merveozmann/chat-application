{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\merve\\\\Desktop\\\\Chat Application\\\\public\\\\src\\\\pages\\\\register\\\\Register.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from \"axios\";\nimport { registerRoute } from '../../utils/APIRoutes';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Register = () => {\n  _s();\n\n  const [values, setValues] = useState({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n    confirmPassword: \"\"\n  });\n\n  const handleSubmit = async event => {\n    console.log(7346382);\n    event.preventDefault();\n\n    if (handleValidation()) {\n      const {\n        password,\n        confirmPassword,\n        username,\n        email\n      } = values;\n      const {\n        data\n      } = await axios.post(registerRoute, {\n        username,\n        email,\n        password\n      });\n    }\n  };\n\n  const handleValidation = () => {\n    const {\n      password,\n      confirmPassword,\n      username,\n      email\n    } = values;\n    console.log(password);\n    console.log(confirmPassword);\n\n    if (password !== confirmPassword) {\n      console.log(\"password and confirm password should be same\");\n      return false;\n    } else if (username.length < 3) {\n      console.log(\"username 3 length\");\n      return false;\n    } else if (password.length < 8) {\n      console.log(\"passeord length 8\");\n      return false;\n    } else if (email === \"\") {\n      console.log(\"email required\");\n      return false;\n    }\n\n    return true;\n  };\n\n  const handleChange = event => {\n    console.log(event);\n    setValues({ ...values,\n      [event.target.name]: event.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: event => handleSubmit(event),\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"username\",\n      id: \"\",\n      placeholder: \"username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"email\",\n      id: \"\",\n      placeholder: \"email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"password\",\n      id: \"\",\n      placeholder: \"pass1\",\n      onChange: e => handleChange(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"confirmPassword\",\n      id: \"\",\n      placeholder: \"pass2\",\n      onChange: e => handleChange(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Create User\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [\"alreaady login \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 30\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Register, \"aFG92VeRwehztSKDFPnkWIx5Tbs=\");\n\n_c = Register;\nexport default Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["C:/Users/merve/Desktop/Chat Application/public/src/pages/register/Register.jsx"],"names":["React","useState","Link","axios","registerRoute","Register","values","setValues","username","email","password","confirmPassword","handleSubmit","event","console","log","preventDefault","handleValidation","data","post","length","handleChange","target","name","value","e"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport axios from \"axios\";\r\nimport { registerRoute } from '../../utils/APIRoutes';\r\n\r\nconst Register = () => {\r\n    const [values,setValues]=useState({\r\n        username:   \"\",\r\n        email:\"\",\r\n        password:\"\",\r\n        confirmPassword:\"\"\r\n    })\r\n    const handleSubmit=async (event)=>{\r\n        console.log(7346382)\r\n        event.preventDefault();\r\n        if(handleValidation()){\r\n            const {password,confirmPassword,username,email}=values;\r\n            const {data} = await axios.post(registerRoute,{\r\n                username,email,password\r\n            })\r\n\r\n        }\r\n    }\r\n    const handleValidation=()=>{\r\n        const {password,confirmPassword,username,email}=values;\r\n        console.log(password)\r\n        console.log(confirmPassword)\r\n        if(password !==confirmPassword){\r\n           console.log(\"password and confirm password should be same\");\r\n           return false;\r\n        }else if(username.length <3){\r\n            console.log(\"username 3 length\")\r\n            return false;\r\n        }else if(password.length < 8){\r\n            console.log(\"passeord length 8\")\r\n            return false;\r\n        }else if(email===\"\"){\r\n            console.log(\"email required\")\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n    const handleChange = (event)=>{\r\n        console.log(event)\r\n        setValues({...values,[event.target.name]:event.target.value})\r\n\r\n    }\r\n  return (\r\n    <form onSubmit={(event)=>handleSubmit(event)}>\r\n        <input type=\"text\" name=\"username\" id=\"\" placeholder='username' />\r\n        <input type=\"text\" name=\"email\" id=\"\" placeholder='email' />\r\n        <input type=\"text\" name=\"password\" id=\"\" placeholder='pass1' onChange={(e)=>handleChange(e)}/>\r\n        <input type=\"text\" name=\"confirmPassword\" id=\"\" placeholder='pass2' onChange={(e)=>handleChange(e)}/>\r\n        <button type='submit'>Create User</button>\r\n        <span>alreaady login <Link to=\"/login\"></Link> </span>\r\n\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default Register"]},"metadata":{},"sourceType":"module"}